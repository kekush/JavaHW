package org.example;

import java.util.*;

public class Task1 {
    public static void main(String[] args) {
        String text = "Россия идет впереди всей планеты. Планета - это Россия.";
        System.out.println(text);
        System.out.println(findWords(text.toString()));
    }

    public static Map<String, Integer> findWords(String str) {
        Map<String, Integer> newMap = new HashMap<>();
        List<String> myList = new ArrayList<>(List.of(str.split(" ")));
        for (int i = myList.size() - 1; i >= 0; i--) {
            if (myList.get(i).contains(").") ||
                    myList.get(i).contains(")!") ||
                    myList.get(i).contains(")?") ||
                    myList.get(i).contains(");") ||
                    myList.get(i).contains("):") ||
                    myList.get(i).contains("),") ||
                    myList.get(i).contains("))") ||
                    myList.get(i).contains(")...")) {
                myList.set(i, myList.get(i).substring(0, myList.get(i).length() - 2));
            } else if (myList.get(i).contains(".") ||
                    myList.get(i).contains("!") ||
                    myList.get(i).contains("?") ||
                    myList.get(i).contains(";") ||
                    myList.get(i).contains(":") ||
                    myList.get(i).contains(",") ||
                    myList.get(i).contains(")") ||
                    myList.get(i).contains("...")) {
                myList.set(i, myList.get(i).substring(0, myList.get(i).length() - 1));
            } else if (myList.get(i).contains("(")) {
                myList.set(i, myList.get(i).substring(1));
            } else if (myList.get(i).contains("((")) {
                myList.set(i, myList.get(i).substring(2));
            } else if (myList.get(i).equals("-")) {
                myList.remove(i);
            }
        }
        for (String s : myList) {
            newMap.putIfAbsent(s.toLowerCase(), 0);
            newMap.put(s.toLowerCase(), newMap.get(s.toLowerCase()) + 1);
        }
        return newMap;
    }
}
